<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Permision extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Permision_model');
    } 

    /*
     * Listing of permisions
     */
    function index()
    {
        $data['permisions'] = $this->Permision_model->get_all_permisions();
        
        $data['_view'] = 'permision/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new permision
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('name','Name','max_length[255]|required');
		$this->form_validation->set_rules('icon','Icon','max_length[255]|required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'name' => $this->input->post('name'),
				'icon' => $this->input->post('icon'),
            );
            
            $permision_id = $this->Permision_model->add_permision($params);
            redirect('permision/index');
        }
        else
        {            
            $data['_view'] = 'permision/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a permision
     */
    function edit($id_permission)
    {   
        // check if the permision exists before trying to edit it
        $data['permision'] = $this->Permision_model->get_permision($id_permission);
        
        if(isset($data['permision']['id_permission']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('name','Name','max_length[255]|required');
			$this->form_validation->set_rules('icon','Icon','max_length[255]|required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'name' => $this->input->post('name'),
					'icon' => $this->input->post('icon'),
                );

                $this->Permision_model->update_permision($id_permission,$params);            
                redirect('permision/index');
            }
            else
            {
                $data['_view'] = 'permision/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The permision you are trying to edit does not exist.');
    } 

    /*
     * Deleting permision
     */
    function remove($id_permission)
    {
        $permision = $this->Permision_model->get_permision($id_permission);

        // check if the permision exists before trying to delete it
        if(isset($permision['id_permission']))
        {
            $this->Permision_model->delete_permision($id_permission);
            redirect('permision/index');
        }
        else
            show_error('The permision you are trying to delete does not exist.');
    }
    
}
